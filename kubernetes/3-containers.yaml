
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: jlixsopes1p2
  labels:
    io.kompose.service: consumer
  name: consumer
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: consumer
  template:
    metadata:
      labels:
        io.kompose.network/so1-proyecto2: "true"
        io.kompose.service: consumer
    spec:
      containers:
      - image: jlixdocker/grpcconsumer
        name: consumer
        imagePullPolicy: Always # Añadido aquí
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: jlixsopes1p2
  labels:
    io.kompose.service: producer
  name: producer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: producer
  template:
    metadata:
      labels:
        io.kompose.network/so1-proyecto2: "true"
        io.kompose.service: producer
    spec:
      containers:
      - image: jlixdocker/grpcproducer
        name: producer
        imagePullPolicy: Always # Añadido aquí
        ports:
        - containerPort: 3001
          hostPort: 3001
          protocol: TCP
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: jlixsopes1p2
  labels:
    io.kompose.service: producer
  name: producer
spec:
  ports:
  - name: "3001"
    port: 3001
    targetPort: 3001
  selector:
    io.kompose.service: producer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: jlixsopes1p2
  labels:
    io.kompose.service: client
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: client
  template:
    metadata:
      labels:
        io.kompose.network/so1-proyecto2: "true"
        io.kompose.service: client
    spec:
      containers:
      - image: jlixdocker/grpcclient
        name: client
        imagePullPolicy: Always # Añadido aquí
        ports:
        - containerPort: 8080
          hostPort: 8080
          protocol: TCP
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: jlixsopes1p2
  labels:
    io.kompose.service: client
  name: client
spec:
  type: ClusterIP
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: client


